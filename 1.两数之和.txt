给定一个整数数组 nums?和一个目标值 target，请你在该数组中找出和为目标值的那?两个?整数，并返回他们的数组下标。

你可以假设每种输入只会对应一个答案。但是，你不能重复利用这个数组中同样的元素。

示例:

给定 nums = [2, 7, 11, 15], target = 9

因为 nums[0] + nums[1] = 2 + 7 = 9
所以返回 [0, 1]

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/two-sum
著作权归领扣网络所有。
解法一（暴力解决）：
class Solution {
    public int[] twoSum(int[] nums, int target) {
        int []arr = new int [2];
        int i = 0;
        int j = 0;
        boolean f =true;
        for(i = 0; i < nums.length && f; i++){
                for(j = nums.length-1; j > i; j--){
                    if(nums[j] + nums[i] == target){
                        arr[0] = i;
                        arr[1] = j;
                        f = false;
                        break;
                    }
                if(!f)
                    break;
            }  
        }
        
        return arr;
    }
}
解法二（Map优化）：
class Solution {
    public int[] twoSum(int[] nums, int target) {
        
         Map<Integer, Integer> map = new HashMap<>();
        for(int i = 0; i< nums.length; i++) {
            if(map.containsKey(target - nums[i])) {
                return new int[] {map.get(target-nums[i]),i};
            }
            map.put(nums[i], i);
        }
        throw new IllegalArgumentException("No two sum solution");
    }
}